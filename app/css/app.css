/* app css stylesheet */

.container {
  width: 1300px;
}

.menu {
  list-style: none;
  border-bottom: 0.1em solid black;
  margin-bottom: 2em;
  padding: 0 0 0.5em;
}

.menu:before {
  content: "[";
}

.menu:after {
  content: "]";
}

.menu > li {
  display: inline;
}

.menu > li:before {
  content: "|";
  padding-right: 0.3em;
}

.menu > li:nth-child(1):before {
  content: "";
  padding: 0;
}

.photo {
    background:#E6E6E6 url(../img/spinner.gif) center 30px no-repeat;
    border:1px solid rgba(0, 0, 0, .15);
    border-radius:3px;
    margin:0 10px 10px 0;
    position:relative;
    width: 260px;
}

.photo .photo-index {
    background:rgba(0, 0, 0, .9);
    color:#E6E6E6;
    position:absolute;
    height:100%;
    text-align:center;
    width:100%;
    z-index:99;
}

.photo .photo-index p:first-child {
    margin-top:10px;
}

.photo .photo-wrapper {
    min-height:60px;
    padding-left: 5px; 
    padding-top: 5px;
}

.photo .photo-description {
    padding-left:15px;
    padding-right:15px;
}

.otherPhoto {
    background:#E6E6E6 url(../img/spinner.gif) center 30px no-repeat;
    border:1px solid rgba(0, 0, 0, .15);
    border-radius:3px;
    margin:0 10px 10px 0;
    position:relative;
    width: 410px;
}

.otherPhoto .photo-index {
    background:rgba(0, 0, 0, .9);
    color:#E6E6E6;
    position:absolute;
    height:100%;
    text-align:center;
    width:100%;
    z-index:99;
}

.otherPhoto .photo-index p:first-child {
    margin-top:10px;
}

.otherPhoto .photo-wrapper {
    min-height:60px;
    padding-left: 5px; 
    padding-top: 5px;
}

.otherPhoto .photo-description {
    padding-left:15px;
    padding-right:15px;
}

.deckgrid .column.size-1-5 {
    width:200px;
}

.deckgrid1 .column.size-1-4 {
    width:280px;
}

.deckgrid .column.size-1-3 {
    width:250px;
}

.deckgrid .column.size-1-2 {
    width:250px;
}

.deckgrid .column.size-1-1 {
    width:280px;
}

.deckgrid[deckgrid]::before {
    /* Specifies that the grid should have a maximum of 4 columns. Each column will have the classes 'column' and 'column-1-4' */
    content: '4 .column.column-1-4';
    font-size: 0;  /*See https://github.com/akoenig/angular-deckgrid/issues/14#issuecomment-35728861 */
    visibility: hidden;
}

.deckgrid .column {
    float: left;
}

.deckgrid .column-1-4 {
    width: 25%;
}

.otherDeckgrid[deckgrid]::before {
    /* Specifies that the grid should have a maximum of 3 columns. Each column will have the classes 'column' and 'column-1-3' */
    content: '3 .column.column-1-3';
    font-size: 0; /* See https://github.com/akoenig/angular-deckgrid/issues/14#issuecomment-35728861 */
    visibility: hidden;
}

.otherDeckgrid .column {
    float: left;
}


.otherDeckgrid .column-1-3 {
    width: 33%;
}

.animation-fade {
    opacity:0;
}

.animation-faded {
    opacity:1;
}

.animation-faded {
   -webkit-transition: opacity 1s linear .2s;
   -moz-transition: opacity 1s linear .2s;
   -o-transition: opacity 1s linear .2s;
   transition: opacity 1s linear .2s;
}

.flexslider-container {
    width: 550px;
    margin: 10px auto;
}

.slides {
  background-color: #E6E6E6;;
}